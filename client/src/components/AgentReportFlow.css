/* AgentReportFlow.css (Minimalist Professional UI) */

/* ============================================
   1. VARIABLES & GLOBAL STYLES
============================================ */
:root {
  --primary-brand: #4F46E5; /* A modern, accessible indigo */
  --primary-hover: #4338CA;
  --primary-light: #EEF2FF;
  --text-primary: #111827;
  --text-secondary: #6B7280;
  --bg-light: #F9FAFB;
  --border-color: #E5E7EB;
  --success-color: #10B981;
  --radius-md: 8px;
  --radius-lg: 12px;
  --font-sans: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
}

.agent-flow-container {
  font-family: var(--font-sans);
  max-width: 480px;
  margin: 2rem auto;
  background: #FFFFFF;
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-md);
  position: relative;
  overflow: hidden;
  border: 1px solid var(--border-color);
}

/* ============================================
   2. VIEW-BASED LAYOUT & TRANSITIONS
============================================ */
.agent-flow-view {
  display: flex;
  flex-direction: column;
  transition: opacity 0.3s ease, transform 0.3s ease, visibility 0.3s;
  visibility: hidden;
  opacity: 0;
  position: absolute;
  top: 0; left: 0; right: 0;
  transform: scale(0.98);
}

.agent-flow-view.is-active {
  visibility: visible;
  opacity: 1;
  position: relative; /* Take up space in the document flow */
  transform: scale(1);
}

.view-header {
  padding: 1.5rem 1.75rem 1rem;
}
.view-header h1 {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--text-primary);
  margin: 0;
}
.view-header .subtitle {
  font-size: 1rem;
  color: var(--text-secondary);
  margin: 0.25rem 0 0;
}

.view-content {
  padding: 0 1.75rem;
  flex-grow: 1;
}

.view-footer {
  padding: 1.5rem 1.75rem;
  background-color: var(--bg-light);
  border-top: 1px solid var(--border-color);
  display: flex;
  justify-content: flex-end;
}
.view-footer.space-between {
  justify-content: space-between;
}


/* ============================================
   3. FORM ELEMENTS
============================================ */
.form-step {
  display: flex;
  gap: 1rem;
  margin-bottom: 1.5rem;
}
.step-number {
  flex-shrink: 0;
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  background: var(--primary-light);
  color: var(--primary-brand);
  display: grid;
  place-items: center;
  font-weight: 600;
}
.step-content {
  flex-grow: 1;
}

.form-group { margin-bottom: 1.5rem; }

label {
  display: block;
  font-weight: 600;
  font-size: 0.875rem;
  color: var(--text-primary);
  margin-bottom: 0.5rem;
}

input[type="text"], textarea {
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: 1rem;
  border: 1px solid var(--border-color);
  border-radius: var(--radius-md);
  box-shadow: var(--shadow-sm);
  transition: border-color 0.2s, box-shadow 0.2s;
}

input[type="text"]:focus, textarea:focus {
  outline: none;
  border-color: var(--primary-brand);
  box-shadow: 0 0 0 3px var(--primary-light);
}

/* ============================================
   4. BUTTONS & CHIPS
============================================ */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  font-size: 1rem;
  font-weight: 600;
  padding: 0.75rem 1.25rem;
  border-radius: var(--radius-md);
  border: none;
  cursor: pointer;
  transition: background-color 0.2s, transform 0.2s, box-shadow 0.2s;
}

.btn-primary {
  background-color: var(--primary-brand);
  color: white;
}
.btn-primary:hover:not(:disabled) {
  background-color: var(--primary-hover);
  box-shadow: var(--shadow-md);
  transform: translateY(-2px);
}
.btn-primary:disabled {
  background-color: #E5E7EB; /* A lighter gray for disabled state */
  color: #A0A0A0; /* Make the text a distinct, muted gray */
  cursor: not-allowed;
  box-shadow: none; /* Ensure no shadow on disabled state */
  transform: none; /* Remove any hover transform on disabled */
}

/* Also add this to ensure the arrow icon matches the text color when disabled */
.btn-primary:disabled svg {
  color: #A0A0A0; /* Match icon color to button text color */
}

.btn-secondary {
  background-color: #FFFFFF;
  color: var(--text-primary);
  border: 1px solid var(--border-color);
  box-shadow: var(--shadow-sm);
}
.btn-secondary:hover {
  background-color: var(--bg-light);
}

/* Chips */
.chip-group {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
}
.chip {
  padding: 0.5rem 1rem;
  border: 1px solid var(--border-color);
  border-radius: 50px;
  background-color: #fff;
  color: var(--text-secondary);
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s;
}
.chip:hover {
  border-color: var(--primary-brand);
  color: var(--primary-brand);
}
.chip.selected {
  background-color: var(--primary-light);
  color: var(--primary-brand);
  border-color: var(--primary-brand);
  font-weight: 600;
}

/* ============================================
   5. OVERLAY & STATES
============================================ */
.agent-flow-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(8px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s, visibility 0.3s;
}
.agent-flow-overlay.is-active {
  opacity: 1;
  visibility: visible;
}

.overlay-content {
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  animation: pop-in 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}
@keyframes pop-in {
  from { transform: scale(0.8); opacity: 0; }
  to { transform: scale(1); opacity: 1; }
}

.overlay-content h2 {
  font-size: 1.25rem;
  color: var(--text-primary);
  margin: 0.5rem 0 0;
}
.overlay-content p {
  color: var(--text-secondary);
  margin: 0 0 1rem;
}

/* Icons */
.processing-icon {
  color: var(--primary-brand);
  animation: spin 1.2s linear infinite;
}
@keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }

.success-icon {
  color: var(--success-color);
}